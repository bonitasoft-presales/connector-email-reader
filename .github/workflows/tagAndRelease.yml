name: Tag and Release

on: workflow_dispatch

jobs:
  create-tag:
    name: Create Tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          server-id: github
          cache: 'maven'

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
      - name: Build and test
        run: ./mvnw clean verify

      - name: Check plugins
        run: ./mvnw versions:display-plugin-updates

      - name: Prepare release
        run: ./mvnw release:prepare

  create-release:
    name: Create Release
    needs: create-tag
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Java and Maven
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          server-id: github
          cache: 'maven'

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@master"

      - name: Display tag
        id: display-tag
        run: |
          echo "tag: ${{ steps.previoustag.outputs.tag }}"
      - uses: actions/checkout@v4
        with:
          ref: ${{ steps.previoustag.outputs.tag }}

      - name: Build and test archetype
        id: build-connector
        run: |
          echo "build ${{ steps.previoustag.outputs.tag }}"
          ./mvnw clean verify

      - name: Get version from pom
        id: get-version
        run: |
          VERSION=$( ./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout )
          FINAL_NAME=$(./mvnw help:evaluate -Dexpression=project.build.finalName -q -DforceStdout )
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=final-name::$FINAL_NAME"

      - name: Display version
        id: display-version
        run: |
          echo "version: ${{ steps.get-version.outputs.version }}"
          echo "final_name: ${{ steps.get-version.outputs.final-name }}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.previoustag.outputs.tag }}
          release_name: ${{ steps.get-version.outputs.final-name }}
          body: |
            Content:
            ${{ steps.build-connector.outputs }}
          draft: false
          prerelease: false

      - name: Upload Release ZIP Asset
        id: upload-release-zip-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ steps.get-version.outputs.final-name }}.zip
          asset_name: ${{ steps.get-version.outputs.final-name }}.zip
          asset_content_type: application/zip

      - name: Upload Release JAR Asset
        id: upload-release-jar-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ steps.get-version.outputs.final-name }}.jar
          asset_name: ${{ steps.get-version.outputs.final-name }}.jar
          asset_content_type: application/zip

      - name: Publish to Github Package
        run: ./mvnw --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}